<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="SettingButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource Philosopher}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Template">
        
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#759EB8" CornerRadius="10" Margin="10">
                        <ContentPresenter Margin="10,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetProperty="Width" To="450">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetProperty="Height" To="70">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetProperty="Width" To="400">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetProperty="Height" To="60">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TransparentSettingButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource Philosopher}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Main_MenuItem"
           TargetType="MenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="border" Background="#759EB8" BorderThickness="0">
                        <Grid>
                            <ContentPresenter ContentSource="Header"
                                          TextBlock.Foreground="Black"
                                          TextBlock.FontFamily="{StaticResource Philosopher}"
                                          TextBlock.FontSize="25"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                            <Popup x:Name="Part_Popup" 
                               AllowsTransparency="True"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                               >
                                <Border x:Name="SubMenuBorder"
                                    Background="#b0e0e6"
                                    BorderBrush="#b0e0e6"
                                    >
                                    <ScrollViewer x:Name="SubMenuScrollViewer"
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" 
                                                    VerticalAlignment="Top"/>
                                            <ItemsPresenter x:Name="ItemsPresenter"/>
                                        </Grid>
                                    </ScrollViewer>
                            </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation"
                                 Value="True">
                            <Setter Property="PopupAnimation"
                                    TargetName="Part_Popup"
                                    Value="None"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#b0e0e6"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#b0e0e6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Screen_Mode"
           TargetType="MenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="border" Background="#759EB8" BorderThickness="0">
                        <Grid>
                            <ContentPresenter ContentSource="Header"
                                          TextBlock.Foreground="Black"
                                          TextBlock.FontFamily="{StaticResource Philosopher}"
                                          TextBlock.FontSize="25"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                            <Popup x:Name="Part_Popup" 
                               AllowsTransparency="True"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Right"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                               >
                                <Border x:Name="SubMenuBorder"
                                    Background="#b0e0e6"
                                    BorderBrush="#b0e0e6"
                                    >
                                    <ScrollViewer x:Name="SubMenuScrollViewer"
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" 
                                                    VerticalAlignment="Top"/>
                                            <ItemsPresenter x:Name="ItemsPresenter"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation"
                                 Value="True">
                            <Setter Property="PopupAnimation"
                                    TargetName="Part_Popup"
                                    Value="None"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#b0e0e6"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#b0e0e6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
